import { validationResult } from 'express-validator';
import { errorFormatter } from '../utils/utils-validation.js';
import UserInputValidationError from '../errors/UserInputValidationError.js';
import { createDebugNamespace } from '../logger/logger.js';

const validationDebug = createDebugNamespace('hottakes:middleware:validation');

/**
 * Field validation middleware.
 * This middleware must be used after the express-validator middleware. It handles the errors generated by the validation.
 * If no error is generated, then the next middleware is called, otherwise a response with status 400 is sent.
 * @param {Express.Request} req - Express request object.
 * @param {Express.Response} res - Express response object.
 * @param next - Next middleware to execute.
 */
export const validateFields = (req, res, next) => {
    validationDebug('Validation middleware execution: user inputs validation');
    try {
        validationResult(req).throw();
        validationDebug('All fields are valid');
        next();
    } catch (error) {
        error = error.formatWith(errorFormatter).array();
        return next(new UserInputValidationError(error));
    }
};
